name: Tests-Build-Push-Services

on:
  push:
    branches:
      - main
    paths:
      - 'task-tracker-backend/**'
      - 'task-tracker-email-sender/**'
      - 'task-tracker-frontend/**'
      - 'task-tracker-scheduler/**'

jobs:
  build-and-push-images:
    env:
      BUILD_PACKAGE_NAME: "git-${{ github.sha }}"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_OWNER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}


      - name: Build and push docker image backend
        uses: docker/build-push-action@v5
        with:
          context: ./task-tracker-backend
          push: true
          tags: |
              ${{ secrets.DOCKER_HUB_OWNER }}/backend:${{ env.BUILD_PACKAGE_NAME}}
              ${{ secrets.DOCKER_HUB_OWNER }}/backend:latest
             

      - name: Build and push docker image email-sender
        uses: docker/build-push-action@v5
        with:
          context: ./task-tracker-email-sender
          push: true
          tags: |
              ${{ secrets.DOCKER_HUB_OWNER }}/email-sender:${{ env.BUILD_PACKAGE_NAME }}
              ${{ secrets.DOCKER_HUB_OWNER }}/email-sender:latest
          

      - name: Build and push docker image frontend
        uses: docker/build-push-action@v5
        with:
          context: ./task-tracker-frontend
          push: true
          tags: |
             ${{ secrets.DOCKER_HUB_OWNER }}/frontend:${{ env.BUILD_PACKAGE_NAME }}
             ${{ secrets.DOCKER_HUB_OWNER }}/frontend:latest
        

      - name: Build and push docker image scheduler
        uses: docker/build-push-action@v5
        with:
          context: ./task-tracker-scheduler
          push: true
          tags: |
             ${{ secrets.DOCKER_HUB_OWNER }}/scheduler:${{ env.BUILD_PACKAGE_NAME }}
             ${{ secrets.DOCKER_HUB_OWNER }}/scheduler:latest


  deploy:
    needs: build-and-push-images
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy with SSH
        uses: appleboy/ssh-action@v1
        with:
           host: ${{ secrets.SERVER_HOST }}
           username: ${{ secrets.SERVER_USERNAME }}
           key: ${{ secrets.SERVER_SSH }}
           script: |
             cd /root
             docker stack deploy -c compose.yaml my_app

