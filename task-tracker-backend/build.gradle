plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.google.protobuf' version '0.9.5'
}

group = 'com.zhvavyy'
version = '0.0.1-SNAPSHOT'
description = 'task-tracker-backend'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

protobuf {
	protoc {
		artifact = 'com.google.protobuf:protoc:4.29.4'
	}
	plugins {
		grpc {
			artifact = 'io.grpc:protoc-gen-grpc-java:1.71.0'
		}
	}
	generateProtoTasks {
		all().each { task ->
			task.builtins { java { option 'lite' } }
			task.plugins { grpc { option 'lite' } }
		}
	}
}



repositories {
	gradlePluginPortal()
	mavenCentral()
}

dependencies {
	implementation 'io.grpc:protoc-gen-grpc-java:1.71.0'
	implementation 'io.grpc:grpc-stub:1.71.0'
	implementation 'io.grpc:grpc-protobuf:1.71.0'
	implementation 'io.grpc:grpc-netty-shaded:1.71.0'
	implementation 'io.grpc:grpc-api:1.71.0'
	implementation 'com.google.protobuf:protobuf-java:4.29.4'
	implementation 'jakarta.annotation:jakarta.annotation-api:3.0.0'
	implementation 'javax.annotation:javax.annotation-api:1.3.2'
	implementation 'io.grpc:grpc-protobuf-lite:1.71.0'
	implementation 'io.github.lognet:grpc-spring-boot-starter:5.1.5'


	implementation 'com.fasterxml.jackson.core:jackson-databind:2.20.0'
	implementation 'com.fasterxml.jackson.core:jackson-core:2.20.0'
	implementation 'org.springframework.kafka:spring-kafka:3.3.10'
	implementation 'org.springframework.amqp:spring-amqp:3.2.5'
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'

	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'com.nimbusds:nimbus-jose-jwt:10.5'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'
	implementation "org.springframework.security:spring-security-oauth2-jose"
	implementation 'org.liquibase:liquibase-core'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.8'
	implementation 'org.springdoc:springdoc-openapi-ui:1.8.0'


	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-authorization-server'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.liquibase:liquibase-core'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}
tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file("$buildDir/generated/sources/annotationProcessor/java/main")
}

sourceSets {
	main {
		java {
			srcDir "$buildDir/generated/sources/annotationProcessor/java/main"
		}
	}
}
tasks.named('test') {
	useJUnitPlatform()
}
